SPARK_CLASSPATH=/path/to/elasticsearch-hadoop-2.2.0/dist/elasticsearch-spark_2.11-2.2.0.jar ./spark-1.6.0-bin-hadoop2.6/bin/spark-submit 2.py

* 2.py (single actor tuple):

With a running spark master at spark://url:7077 and 1 slave: 9s.  and 2 slaves: 12s.  and 6 slaves: 23s.
less startup time but more network transmit time.  ie, the final JOIN takes 2.1s vs 1.5s for the 8 thread local solution below.

With a local spark instance and 1 thread: 8s.  and 8 threads: 6s.
1st 2s is spinning up Spark

* 3.py (all actor tuples):

With a running spark master at spark://url:7077 and 1 slave: 14s.  and 2 slaves: 19s.  and 6 slaves: 34s.

With a local spark instance and 1 thread: 18s.  and 8 threads: 11s.




* vanilla_script (all actor tuples, no Spark SQL):

With a running spark master at spark://url:7077 and 1 slave: 4s.  and 2 slaves: 6s.  and 6 slaves: 12s.

With a local spark instance and 1 thread: 4s.  and 8 threads: 3s.

* sql_script.py (all actor tuples):

With a running spark master at spark://url:7077 and 1 slave: 9s.  and 2 slaves: 11s.  and 6 slaves: 21s.

With a local spark instance and 1 thread: 5s.  and 8 threads: 5s.





Corpus (L/M/H): 1M/15M/150M 
Result Set (L/M/H): 5/500/5,000

Postgres:

L/L: (2 - frank): 50ms
L/M: (304 - tv): 55ms
L/H: (1,174 - blue): 55ms

M/L: (7 - 1MinuteNightmare): 1600ms
M/M (410 - bourne): 1700ms
M/H (4,686 - picture): 1800ms

ES-Hadoop (Spark SQL):

L/L: (2 - frank): 5400ms
L/M: (304 - tv): 6000ms
L/H: (1,174 - blue): 7800ms

M/L: (7 - 1MinuteNightmare): 5300ms
M/M (410 - bourne): 5900ms
M/H (4,686 - picture): 9400ms

ES-Hadoop (vanilla):

M/L: (7 - 1MinuteNightmare): 3100ms
M/M (410 - bourne): 3300ms
M/H (4,686 - picture): 6600ms
